[{"/Users/dan/Desktop/Hack-the-North/frontend/src/index.js":"1","/Users/dan/Desktop/Hack-the-North/frontend/src/App.js":"2","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/Recipes.jsx":"3","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/Home/Home.jsx":"4","/Users/dan/Desktop/Hack-the-North/frontend/src/components/Navbar.jsx":"5","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/AddRecipe/AddRecipe.jsx":"6","/Users/dan/Desktop/Hack-the-North/frontend/src/components/AddRecipeButton.jsx":"7","/Users/dan/Desktop/Hack-the-North/frontend/src/components/SearchBar.jsx":"8","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/RandomRecipe.jsx":"9"},{"size":354,"mtime":1663420485394,"results":"10","hashOfConfig":"11"},{"size":672,"mtime":1663420985498,"results":"12","hashOfConfig":"11"},{"size":114,"mtime":1663419786167,"results":"13","hashOfConfig":"11"},{"size":1216,"mtime":1663420485394,"results":"14","hashOfConfig":"11"},{"size":2498,"mtime":1663420485394,"results":"15","hashOfConfig":"11"},{"size":1372,"mtime":1663420485394,"results":"16","hashOfConfig":"11"},{"size":434,"mtime":1663420485393,"results":"17","hashOfConfig":"11"},{"size":1421,"mtime":1663419786165,"results":"18","hashOfConfig":"11"},{"size":2488,"mtime":1663423357187,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"px2ssu",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dan/Desktop/Hack-the-North/frontend/src/index.js",[],[],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/App.js",["51"],[],"import React from \"react\";\n\nimport Home from \"./pages/Home/Home.jsx\";\nimport Navbar from \"./components/Navbar\";\nimport Recipes from \"./pages/Recipes.jsx\";\nimport AddRecipe from \"./pages/AddRecipe/AddRecipe\";\nimport RandomRecipe from \"./pages/RandomRecipe.jsx\";\n\nfunction App() {\n  let Component;\n  switch (window.location.pathname) {\n    case \"/\":\n      Component = Home;\n      break;\n    case \"/recipes\":\n      Component = Recipes;\n      break;\n    case \"/addrecipe\":\n      Component = AddRecipe;\n      break;\n    case \"/recipe\":\n      Component = RandomRecipe;\n      break;\n  }\n\n  return (\n    <>\n      <Navbar />\n      <Component />\n    </>\n  );\n}\n\nexport default App;\n","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/Recipes.jsx",[],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/pages/Home/Home.jsx",[],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/components/Navbar.jsx",["52","53","54"],[],"import {\n  Avatar,\n  Box,\n  Button,\n  Center,\n  Flex,\n  Heading,\n  Link,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Stack,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport AddRecipe from \"./AddRecipeButton.jsx\";\nimport SearchBar from \"./SearchBar\";\n\nimport logo from '../assets/logo.png'\n\nconst LinkItem = ({ href, children }) => {\n  return (\n    <Link\n      p={2}\n      rounded={\"md\"}\n      _hover={{\n        textDecoration: \"none\",\n        bg: useColorModeValue(\"gray.200\", \"gray.700\"),\n        color: 'black'\n      }}\n      href={href}\n    >\n      {children}\n    </Link>\n  );\n};\n\nconst searchBar = () => {};\n\nconst Navbar = () => {\n  return (\n    <>\n      <Box\n        bg=\"green.400\"\n        css={{ backdropFilter: \"blur(10px)\", color: \"#fff\" }}\n        px={4}\n      >\n        <Flex h={16} alignItems={\"center\"} justifyContent={\"space-between\"}>\n          <a href = '/'>\n            <Avatar name = 'yes' src = {logo} alt = 'logo'/>\n          </a>\n\n          <Flex alignItems={\"center\"}>\n            <Stack direction={\"row\"} spacing={7}>\n\n              <SearchBar />\n\n              <AddRecipe/>\n\n              <LinkItem href=\"/\">\n                  Home\n              </LinkItem>\n\n              <LinkItem href=\"/recipes\">Browse</LinkItem>\n\n              <Menu>\n                <MenuButton\n                  as={Button}\n                  rounded={\"full\"}\n                  variant={\"link\"}\n                  cursor={\"pointer\"}\n                  minW={0}\n                >\n                  <Avatar\n                    size={\"sm\"}\n                    src={\"https://avatars.dicebear.com/api/male/username.svg\"}\n                  />\n                </MenuButton>\n                <MenuList alignItems={\"center\"} color=\"black\">\n                  <br />\n                  <Center>\n                    <Avatar\n                      size={\"2xl\"}\n                      src={\"https://avatars.dicebear.com/api/male/username.svg\"}\n                    />\n                  </Center>\n                  <Center>\n                    <p>Username</p>\n                  </Center>\n                  <br />\n                  <MenuDivider />\n                  <MenuItem>Your Favourites</MenuItem>\n                  <MenuItem> Account Settings</MenuItem>\n                  <MenuItem>Log Out</MenuItem>\n                </MenuList>\n              </Menu>\n            </Stack>\n          </Flex>\n        </Flex>\n      </Box>\n    </>\n  );\n};\n\nexport default Navbar;\n","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/AddRecipe/AddRecipe.jsx",[],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/components/AddRecipeButton.jsx",[],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/components/SearchBar.jsx",["55"],[],"import { Input, InputGroup, InputLeftElement, Stack } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { CloseIcon, SearchIcon } from \"@chakra-ui/icons\";\n\nconst SearchBar = () => {\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [recipeInput, setRecipeInput] = useState(\"\");\n\n  const handleFilter = (e) => {\n    e.preventDefault();\n    setRecipeInput(e.target.value);\n  };\n\n  const clearInput = () => {\n    console.log(\"reached\");\n\n    setFilteredRecipes([]);\n    setRecipeInput(\"\");\n  };\n\n  return (\n    <>\n      <Stack spacing={4}>\n        <InputGroup>\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={\n              recipeInput.length === 0 ? (\n                <SearchIcon />\n              ) : (\n                <CloseIcon onClick={clearInput} />\n              )\n            }\n          />\n          <Input\n            type=\"text\"\n            placeholder=\"I want to eat...\"\n            _placeholder={{color: 'white'}}\n            onChange={handleFilter}\n          />\n        </InputGroup>\n      </Stack>\n    </>\n    //   <>\n    //     <Input\n    //       type=\"text\"\n    //       placeholder=\"Search by recipe name\"\n    //       value={recipeInput}\n    //       onChange={handleFilter}\n    //     />\n    //     {recipeInput.length === 0 ? <SearchIcon /> : <CloseIcon />}\n    //   </>\n  );\n};\n\nexport default SearchBar;","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/RandomRecipe.jsx",["56","57","58","59"],[],{"ruleId":"60","severity":1,"message":"61","line":11,"column":3,"nodeType":"62","messageId":"63","endLine":24,"endColumn":4},{"ruleId":"64","severity":1,"message":"65","line":7,"column":3,"nodeType":"66","messageId":"67","endLine":7,"endColumn":10},{"ruleId":"64","severity":1,"message":"68","line":15,"column":3,"nodeType":"66","messageId":"67","endLine":15,"endColumn":7},{"ruleId":"64","severity":1,"message":"69","line":41,"column":7,"nodeType":"66","messageId":"67","endLine":41,"endColumn":16},{"ruleId":"64","severity":1,"message":"70","line":7,"column":10,"nodeType":"66","messageId":"67","endLine":7,"endColumn":25},{"ruleId":"64","severity":1,"message":"71","line":3,"column":3,"nodeType":"66","messageId":"67","endLine":3,"endColumn":9},{"ruleId":"64","severity":1,"message":"72","line":4,"column":3,"nodeType":"66","messageId":"67","endLine":4,"endColumn":12},{"ruleId":"64","severity":1,"message":"68","line":8,"column":3,"nodeType":"66","messageId":"67","endLine":8,"endColumn":7},{"ruleId":"73","severity":1,"message":"74","line":22,"column":40,"nodeType":"66","endLine":22,"endColumn":47},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'Heading' is defined but never used.","Identifier","unusedVar","'Text' is defined but never used.","'searchBar' is assigned a value but never used.","'filteredRecipes' is assigned a value but never used.","'Center' is defined but never used.","'Container' is defined but never used.","react-hooks/exhaustive-deps","The ref value 'InstructionsRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'InstructionsRef.current' to a variable inside the effect, and use that variable in the cleanup function."]